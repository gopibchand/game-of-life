name: Multi-stage Cache Deploy to ec2-user tomcat10

on:
  workflow_dispatch:
  push:
    branches: [ main, f-workflow ]
  pull_request:
    branches: [ main ]
  
jobs:
  codeclone:
    name: Clone and Upload Source Code
    runs-on: ${{ vars.UBUNTU }}
    container:
      image: ${{ vars.BASE_IMAGE }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: upload source
        uses: actions/upload-artifact@v4
        with:
          name: sourcecode_gol
          path: ./

  jdkinstall:
    name: Set up JDK 11 dummy stage
    runs-on: ${{ vars.UBUNTU }}
    container:
      image: ${{ vars.MVN_IMAGE }}
    needs: codeclone
      # options: --user root  # Use root user to avoid permission issues
    steps:
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 11
    
  codebuild:
    name: Build with Maven GOL
    runs-on: ${{ vars.UBUNTU }}
    container:
      image: ${{ vars.MVN_IMAGE }}
    needs: jdkinstall
    steps:
      - name: Download sourcecode
        uses: actions/download-artifact@v4
        with:
          name: sourcecode_gol
          path: ./
      - name: list the date
        run: ls -lrt
      - name: Build with Maven
        run: mvn -B clean install -DskipTests
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build_artifacts
          path: ./gameoflife-web/target/
  deploytodocker:
    name: Deploy to ec2-user 
    runs-on: ${{ vars.UBUNTU }}
    needs: codebuild
    steps:
      - name: Download war
        uses: actions/download-artifact@v4
        with:
          name: build_artifacts
          path: ./gameoflife-web/target/
      - name: SSH Setup
        run: |
          mkdir -p ~/.ssh
          echo ${{ secrets.AWS_LOGIN }} > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ vars.AWS_HOST }} >> ~/.ssh/known_hosts
      - name: list files
        run: ls -lrt ./gameoflife-web/target/ && ls -lrt 
      - name: Copy war to ec2
        run: |
          scp -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ./gameoflife-web/target/gameoflife-web.war ec2-user@${{ secrets.AWS_HOST }}:/home/ec2-user/tomcat10/webapps/
      - name: Restart Tomcat
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ec2-user@${{ secrets.AWS_HOST }} "/home/ec2-user/tomcat10/bin/shutdown.sh && sleep 5 && /home/ec2-user/tomcat10/bin/startup.sh"